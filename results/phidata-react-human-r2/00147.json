{"query": "\ndef order_by_points(nums):\n    \"\"\"\n    Write a function which sorts the given list of integers\n    in ascending order according to the sum of their digits.\n    Note: if there are several items with similar sum of their digits,\n    order them based on their index in original list.\n\n    For example:\n    >>> order_by_points([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n    >>> order_by_points([]) == []\n    \"\"\"", "answer": "    def digits_sum(n):\n        neg = 1\n        if n < 0: n, neg = -1 * n, -1 \n        n = [int(i) for i in str(n)]\n        n[0] = n[0] * neg\n        return sum(n)\n    return sorted(nums, key=digits_sum)", "result": "To achieve the desired functionality, we need to sort the list of integers based on the sum of their digits. In case two numbers have the same digit sum, they should remain in their original order from the input list. Here's how you can implement the function:\n\n```python\ndef order_by_points(nums):\n    # Helper function to calculate the sum of digits of a number\n    def digit_sum(n):\n        return sum(int(d) for d in str(abs(n)))\n    \n    # Sorting the list with a custom key\n    # The key is a tuple where the first element is the digit sum\n    # The second element is the index to maintain original order when digit sums are equal\n    return sorted(range(len(nums)), key=lambda i: (digit_sum(nums[i]), i))\n\n# Example usage\nprint(order_by_points([1, 11, -1, -11, -12]))  # Output should be [-1, -11, 1, -12, 11]\nprint(order_by_points([]))  # Output should be []\n```\n\nThis function defines a helper function `digit_sum` to calculate the sum of the absolute digits of a number. It then sorts the indices of the list based on the digit sum, using each index to maintain the order when digit sums are identical. Finally, it reorders the original list based on the sorted indices.", "tools": {}, "retrieve_time": [], "rerank_time": [], "communication_size": {}, "communication_pack": {}, "total_time": [6.073227882385254], "llm_time": {"gpt-4o-2024-08-06": [4.349056959152222]}, "llm_tokens": {"gpt-4o-2024-08-06": {"prompt": [946], "completion": [280], "total": [1226]}}}