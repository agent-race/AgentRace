{"query": "\n\ndef monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"", "answer": "    if l == sorted(l) or l == sorted(l, reverse=True):\n        return True\n    return False", "result": "The function `monotonic` determines if a given list `l` is monotonically increasing or decreasing. Here's the Python implementation:\n\n```python\ndef monotonic(l: list):\n    \"\"\"Return True if list elements are monotonically increasing or decreasing.\"\"\"\n    if all(l[i] <= l[i + 1] for i in range(len(l) - 1)):\n        return True  # Monotonically increasing\n    if all(l[i] >= l[i + 1] for i in range(len(l) - 1)):\n        return True  # Monotonically decreasing\n    return False  # Not monotonic\n```\n\n### Explanation\n1. The function checks whether all elements in the list are in ascending order (`l[i] <= l[i + 1]`) or descending order (`l[i] >= l[i + 1]`).\n2. If either condition holds true for the entire list, it returns `True`.\n3. If neither condition applies, it returns `False`.\n\n### Examples\n- `monotonic([1, 2, 4, 20])` \u2192 `True` (monotonically increasing)\n- `monotonic([1, 20, 4, 10])` \u2192 `False` (not monotonically increasing or decreasing)\n- `monotonic([4, 1, 0, -10])` \u2192 `True` (monotonically decreasing)", "tools": {}, "retrieve_time": [], "rerank_time": [], "communication_size": {}, "communication_pack": {}, "total_time": [13.363539934158325], "llm_time": {"gpt-4o-2024-08-06": [13.343491077423096]}, "llm_tokens": {"gpt-4o-2024-08-06": {"prompt": [1624], "completion": [298], "total": [1922]}}}